-- Create a deletion traverser for C++. (deleteRecursive)
-- Add shared object tests to sample test.
-- Finish C++ text encoder and check against sample.
-- Finish C++ binary encoder and write tests.
-- Delete extensions feature.
-- Ensure that root classes do not have a type id.
-- Finish documenting binary format.
-- Document text format.
-- Double-round-trip test: text -> binary -> text
-- Java backend.
-- Implememnt C++ merge.
-- Implement skipping of deleted / unknown fields.
-- Custom options in .coda files.
-- UnknownFields - do we care?
-- Memory pool support.
   This will require creating custom implementations of collections.

Older notes:

-- Finish binary decoder (Python, C++)
-- analyzer should check for invalid package names
-- Deprecate extension fields
-- NULL defaults
-- Mutation unit test
-- Add source line numbers to C++ descriptors
-- specify the type of the typeid function (should be implicit from base initializer.)
-- equals() should shortcut reference comparison for objects
-- option for python generator to generate pydev type hints
-- option for python generator to generate additional convenience methods for collections types.
-- visitors need to handle graph cycles. Transformers need to handle shared objects.

Command to create eclipse project:

   cmake -G "Eclipse CDT4 - Ninja" -D CMAKE_BUILD_TYPE=Debug -D CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT=TRUE -D _ECLIPSE_VERSION=4.3 ../src

   -DCMAKE_CXX_COMPILER_ARG1=-std=c++11\;-stdlib=libc++   

Command to regenerate C++ descriptor files:

   bin/codagen data/descriptors.coda -o cpp:support/cpp/lib/ --headerout cpp:support/cpp/include/
   